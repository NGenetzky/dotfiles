
# vim: set filetype=tmux:

################################################################################
# tmux settings are version dependent
# https://stackoverflow.com/a/40902312
#

# Version-specific commands [grumble, grumble]
# See: https://github.com/tmux/tmux/blob/master/CHANGES
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
                            sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' " \
    set -g mouse-select-pane off; set -g mode-mouse off; \
    set -g mouse-resize-pane off; set -g mouse-select-window off; \
    set -g message-fg red; \
    set -g message-bg black; \
    set -g message-attr bright; \
    set -g window-status-bg default; \
    set -g window-status-fg default; \
    set -g window-status-current-attr bold; \
    set -g window-status-current-bg cyan; \
    set -g window-status-current-fg default; \
    set -g window-status-bell-fg red; \
    set -g window-status-bell-bg black; \
    set -g window-status-activity-fg white; \
    set -g window-status-activity-bg black"

# TODO: Add version specific 'm' and 'M'
# # toggle mouse mode to allow mouse copy/paste
# # set mouse on with prefix m
# bind m \
#     set -g mode-mouse on \;\
#     if-shell 'test "`tmux -V`" != "tmux 1.4"' 'set-option -g mouse-resize-pane on' \;\
#     set -g mouse-select-pane on \;\
#     if-shell 'test "`tmux -V`" != "tmux 1.4"' 'set-option -g mouse-select-window on' \;\
#     display 'Mouse: ON'
# # set mouse off with prefix M
# bind M \
#     set -g mode-mouse off \;\
#     if-shell 'test "`tmux -V`" != "tmux 1.4"' 'set-option -g mouse-resize-pane off' \;\
#     set -g mouse-select-pane off \;\
#     if-shell 'test "`tmux -V`" != "tmux 1.4"' 'set-option -g mouse-select-window off' \;\
#     display 'Mouse: OFF'

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -g mouse off"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"

# bind-key syntax changed in 2.4 -- selection / copy / paste
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' " \
   bind-key -t vi-copy v   begin-selection; \
   bind-key -t vi-copy V   send -X select-line; \
   bind-key -t vi-copy C-v rectangle-toggle; \
   bind-key -t vi-copy y   copy-pipe 'xclip -selection clipboard -in'"

# Newer versions
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' " \
  bind-key -T copy-mode-vi v   send -X begin-selection; \
  bind-key -T copy-mode-vi V   send -X select-line; \
  bind-key -T copy-mode-vi C-v send -X rectangle-toggle; \
  bind-key -T copy-mode-vi y   send -X copy-pipe-and-cancel 'xclip -selection clipboard -in' \
  set -g message-command-bg 'colour7'; \
  set -g message-command-fg 'colour11'; \
  set -g message-fg 'colour11'; \
  set -g pane-border-fg 'colour8'; \
  set -g status-attr 'none'; \
  set -g status-left-attr 'none'; \
  set -g status-left-attr 'none'; \
  setw -g window-status-activity-attr 'none'; \
  setw -g window-status-activity-bg 'colour233'; \
  setw -g window-status-activity-fg 'colour4'; \
  setw -g window-status-attr 'none'; \
  setw -g window-status-bg 'colour240'; \
  setw -g window-status-fg 'colour7'; \
  set -g message-bg 'colour240'; \
  set -g pane-active-border-fg 'colour7'; \
  set -g status-right-attr 'none'; \
  set-window-option -g window-status-current-bg black; \
  "

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc)" = 1 ]' \
   "set -g message-style fg=red,bg=black; \
    set -g message-style bright; \
    set -g window-status-style          fg=default,bg=default; \
    set -g window-status-current-style  fg=default,bg=cyan,bold; \
    set -g window-status-bell-style     fg=red,bg=black; \
    set -g window-status-activity-style fg=white,bg=black"
#
################################################################################

################################################################################
# dotphiles:tmux/tmux.conf
# https://github.com/dotphiles/dotphiles/blob/e600d39891444163373ec958a38313ab60b0371a/tmux/tmux.conf
#

# Make clipboard work inside vim (OSX)
if-shell 'test "$(uname)" = "Darwin"' 'set-option -g default-command "reattach-to-user-namespace -l $SHELL"'

# Clipboard (OSX)
if-shell 'test "$(uname)" = "Darwin"' 'bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
if-shell 'test "$(uname)" = "Darwin"' 'bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"'

# 0 is too far from ` ;)
set-option -g base-index 1
set-window-option -g pane-base-index 1

set-option -g default-command $SHELL
set-option -g default-shell $SHELL

set-option -g prefix C-a
bind-key C-a last-window
bind-key a send-prefix

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on
set-option -g set-titles-string '[#S:#I #h] #W'

set -g default-terminal "screen-256color"
set -g terminal-overrides 'xterm:colors=256'
set -g status-keys vi
set -g history-limit 10000

setw -g mode-keys vi


#bind-key Space choose-session

bind-key | split-window -h
bind-key - split-window -v

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# easily toggle synchronization (mnemonic: e is for echo)
bind e setw synchronize-panes

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.tmux.conf \; display-message 'Reloaded ~/.tmux.conf!'

# Set window notifications
setw -g monitor-activity on
set -g visual-activity off
#
################################################################################

# tmux colors: https://superuser.com/a/1104214
# # note: modified this section from dotphiles
# set -g status 'on'
# set -g status-bg 'colour247'
# set -g status-justify 'left'
# set -g status-left '#[fg=colour0,bg=colour4,bold] #S #[fg=colour4,bg=colour10,nobold,nounderscore,noitalics]'
# set -g status-left-length '100'
# set -g status-right '#[fg=colour7,bg=colour10,nobold,nounderscore,noitalics]#[fg=colour11,bg=colour7] %Y-%m-%d  %H:%M #[fg=colour4,bg=colour7,nobold,nounderscore,noitalics]#[fg=colour0,bg=colour4] #h '
# set -g status-right-length '100'
# setw -g window-status-current-format '#[fg=colour10,bg=colour7,nobold,nounderscore,noitalics]#[fg=colour11,bg=colour7] #I#F #[fg=colour11,bg=colour7] #W #[fg=colour7,bg=colour10,nobold,nounderscore,noitalics]'
# setw -g window-status-format '#[fg=colour7,bg=colour10] #I#F #[fg=colour7,bg=colour10] #W'
# setw -g window-status-separator ''

################################################################################
# lateo.conf
#

# set -g status-right '#[fg=green]'
# set -g status-left '#[fg=blue]#h'
# set-window-option -g window-status-current-format '#[fg=yellow][#I]#[fg=red] #W'
# set-window-option -g window-status-format '#[fg=yellow][#I]#[fg=white] #W'

#
################################################################################


################################################################################
# Plugins
#

# tmux-tpm Tmux Plugin Manager
# Automatically install tpm.
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone --depth=1 https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

if-shell -b '[ "$(echo "$TMUX_VERSION <= 2.1" | bc)" = 1 ]' " \
    You must comment out the plugins session  \
    "

set -g @plugin 'tmux-plugins/tpm'
source-file ~/.tmux/plugins.tmux.conf
run '~/.tmux/plugins/tpm/tpm'
# vim: set filetype=tmux:

# tmux2html :cat2: Render full tmux windows or individual panes as HTML

# tmux-better-mouse-mode A tmux plugin to better manage and configure the mouse.

# tmux-mem-cpu-load CPU, RAM memory, and load monitor for use with tmux

# tmux-fingers copy pasting in terminal with vimium/vimperator like hints.

# tmux-plugins Official tmux plugins

# tmux-battery Plug and play battery percentage and icon indicator for Tmux.

# tmux-color-solarized A color theme using Ethan Schoonover’s Solarized color scheme http://ethanschoonover.com/solarized
set -g @plugin 'seebi/tmux-colors-solarized'

# tmux-continuum Continuous saving of tmux environment. Automatic restore when tmux is started. Automatic tmux start when computer is turned on.

# tmux-copycat A plugin that enhances tmux search
# set -g @plugin 'tmux-plugins/tmux-copycat'

# tmux-cpu Show CPU load with easy icons

# tmux-fpp Quickly open any path on your terminal window in your $EDITOR of choice!
set -g @plugin 'jbnicolai/tmux-fpp'
# f - "fpp" for a new window with a Facebook PathPicker selection of your tty.
# set -g @fpp-key 'f'

# tmux-logging Easy logging and screen capturing for Tmux.
set -g @plugin 'tmux-plugins/tmux-logging'

# tmux-maildir-counter Plugin that counts files on a specific mail directory

# tmux-online-status Tmux plugin that displays online status of your computer.

# tmux-open Tmux key bindings for quick opening of a highlighted file or url
set -g @plugin 'tmux-plugins/tmux-open'
# In tmux copy mode:
# o - "open" a highlighted selection with the system default program. open for OS X or xdg-open for Linux.
# Ctrl-o - open a highlighted selection with the $EDITOR
# Shift-s - search the highlighted selection directly inside a search engine (defaults to google).

# tmux-pain-control standard pane key-bindings for tmux
set -g @plugin 'tmux-plugins/tmux-pain-control'

# tmux-prefix-highlight Plugin that highlights when you press tmux prefix key

# tmux-resurrect Persists tmux environment across system restarts.
set -g @plugin 'tmux-plugins/tmux-resurrect'

# tmux-sensible basic tmux settings everyone can agree on
set -g @plugin 'tmux-plugins/tmux-sensible'

# tmux-sessionist Lightweight tmux utils for manipulating sessions

# tmux-sidebar A sidebar with the directory tree for the current path. Tries to make tmux more IDE like.
set -g @plugin 'tmux-plugins/tmux-sidebar'

# tmux-urlview Quickly open any url on your terminal window!

# tmux-yank Tmux plugin for copying to system clipboard. Works on OSX, Linux and Cygwin.

# vim-tmux-focus-events Make terminal vim and tmux work better together.


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
